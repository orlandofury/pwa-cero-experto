{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class PaisesService {\n  constructor(http) {\n    this.http = http;\n    this.paises = [];\n  }\n  getPaises() {\n    if (this.paises.length > 0) {\n      return Promise.resolve(this.paises);\n    }\n    return new Promise(resolve => {\n      this.http.get('https://restcountries.com/v2/lang/es').subscribe(paises => {\n        console.log(paises);\n        this.paises = paises;\n        resolve(paises);\n      });\n    });\n  }\n  getPaisPorId(id) {\n    if (this.paises.length > 0) {\n      const pais = this.paises.find(p => p.alpha3Code === id);\n      return Promise.resolve(pais);\n    }\n    return this.getPaises().then(paises => {\n      const pais = paises.find(p => p.alpha3Code === id);\n      return Promise.resolve(pais);\n    });\n  }\n}\nPaisesService.ɵfac = function PaisesService_Factory(t) {\n  return new (t || PaisesService)(i0.ɵɵinject(i1.HttpClient));\n};\nPaisesService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: PaisesService,\n  factory: PaisesService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;AAOA,OAAM,MAAOA,aAAa;EAIxBC,YAAoBC,IAAe;IAAf,SAAI,GAAJA,IAAI;IAFhB,WAAM,GAAY,EAAE;EAEW;EAEvCC,SAAS;IACP,IAAG,IAAI,CAACC,MAAM,CAACC,MAAM,GAAC,CAAC,EAAC;MACtB,OAAOC,OAAO,CAACC,OAAO,CAAC,IAAI,CAACH,MAAM,CAAC;;IAErC,OAAO,IAAIE,OAAO,CAAEC,OAAO,IAAE;MAC3B,IAAI,CAACL,IAAI,CAACM,GAAG,CAAC,sCAAsC,CAAC,CACpDC,SAAS,CAAGL,MAAM,IAAI;QACrBM,OAAO,CAACC,GAAG,CAACP,MAAM,CAAC;QACnB,IAAI,CAACA,MAAM,GAAYA,MAAM;QAC7BG,OAAO,CAAUH,MAAM,CAAC;MAC1B,CAAC,CAAC;IACJ,CAAC,CAAC;EACJ;EAEAQ,YAAY,CAACC,EAAM;IACjB,IAAG,IAAI,CAACT,MAAM,CAACC,MAAM,GAAC,CAAC,EAAC;MACtB,MAAMS,IAAI,GAAG,IAAI,CAACV,MAAM,CAACW,IAAI,CAACC,CAAC,IAAEA,CAAC,CAACC,UAAU,KAAKJ,EAAE,CAAC;MACrD,OAAOP,OAAO,CAACC,OAAO,CAACO,IAAI,CAAC;;IAE9B,OAAO,IAAI,CAACX,SAAS,EAAE,CAACe,IAAI,CAACd,MAAM,IAAE;MACnC,MAAMU,IAAI,GAAGV,MAAM,CAACW,IAAI,CAACC,CAAC,IAAEA,CAAC,CAACC,UAAU,KAAKJ,EAAE,CAAC;MAChD,OAAOP,OAAO,CAACC,OAAO,CAACO,IAAI,CAAC;IAC9B,CAAC,CAAC;EACJ;;AA7BWd,aAAa;mBAAbA,aAAa;AAAA;AAAbA,aAAa;SAAbA,aAAa;EAAAmB,SAAbnB,aAAa;EAAAoB,YAFZ;AAAM","names":["PaisesService","constructor","http","getPaises","paises","length","Promise","resolve","get","subscribe","console","log","getPaisPorId","id","pais","find","p","alpha3Code","then","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\orlan\\development\\teaching\\udemy\\PWA\\13-paises\\src\\app\\services\\paises.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport {IPais} from '../interfaces/pais.interface';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PaisesService {\n\n  private paises: IPais[] = [];\n\n  constructor(private http:HttpClient) { }\n\n  getPaises(): Promise<IPais[]>{\n    if(this.paises.length>0){\n      return Promise.resolve(this.paises);\n    }\n    return new Promise( resolve=>{\n      this.http.get('https://restcountries.com/v2/lang/es')\n      .subscribe( (paises) => {\n        console.log(paises);\n        this.paises = <IPais[]>paises;\n        resolve(<IPais[]>paises);\n      })\n    })\n  }\n \n  getPaisPorId(id:any){\n    if(this.paises.length>0){\n      const pais = this.paises.find(p=>p.alpha3Code === id);\n      return Promise.resolve(pais);\n    }\n    return this.getPaises().then(paises=>{\n      const pais = paises.find(p=>p.alpha3Code === id);\n      return Promise.resolve(pais);\n    })\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}